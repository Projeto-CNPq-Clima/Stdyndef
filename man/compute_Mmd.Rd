% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compute_Mmd.R
\name{compute_Mmd}
\alias{compute_Mmd}
\title{Computes the Mmd matrix using Spatial Deformation MCMC output}
\usage{
compute_Mmd(MCMC_output, response, sites, Map, dd)
}
\arguments{
\item{MCMC_output}{A list containing the output of \code{SpatialDeformationMCMC}, which includes the matrix \code{MDef}.}

\item{response}{A matrix of observed values for the response variable.}

\item{sites}{A matrix containing the geographic coordinates of the locations.}

\item{Map}{A matrix representing the geographic coordinates of the map boundaries.}

\item{dd}{An integer specifying the resolution of the grid, where the estimated deformations will be
computed for a grid of dimension \verb{(dd+1) x (dd+1)}.}
}
\value{
A matrix where each column represents the posterior estimate of the q-th dynamic deformation
on a grid of dimension \verb{(dd+1) x (dd+1)}. Additionally, it includes the \code{Map} outline as a reference
for spatial context.
}
\description{
Computes the Mmd matrix using Spatial Deformation MCMC output
}
\details{
This function calculates the dynamic deformations by using posterior samples obtained from MCMC estimation.
For each posterior sample, the deformations are interpolated over a specified grid resolution \verb{(dd+1) x (dd+1)},
with each column in the resulting matrix corresponding to the posterior deformation estimates at that grid
resolution. The \code{Map} outline is returned alongside these estimates for geographic reference.
}
\examples{
# Example usage of compute_Mmd
MCMC_output <- SpatialDeformationMCMC(response = temperature, FT = FT, MatFFT = MatFFT, GT = GT,
                                       sites = sites, GAMA = GAMA, iteration = 100, burnin = 50, jump = 1)
response <- temperature
sites <- sites
Map <- Map
dd <- 10

Mmd_result <- compute_Mmd(MCMC_output, response, sites, Map, dd)

# Plot the posterior deformations on the grid with Map outline
image(matrix(Mmd_result[,1], nrow = dd + 1), main = "Posterior Deformation (q = 1)")
lines(Map[,1], Map[,2], col = "red")

}
