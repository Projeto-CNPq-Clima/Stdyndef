% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spatio_temporal_interpolation.R
\name{spatio_temporal_interpolation}
\alias{spatio_temporal_interpolation}
\title{Spatio-Temporal Interpolation for Response Variable}
\usage{
spatio_temporal_interpolation(
  MCMC_output,
  response,
  FT,
  MatFFT,
  GT,
  sites,
  INDI,
  GAMA,
  FTNO,
  RS
)
}
\arguments{
\item{MCMC_output}{A list containing the output matrices Msigmak, MPhi, Mkappa, MTheta, MDef, and the parameter bd from SpatialDeformationMCMC.}

\item{response}{Matrix of observed values for the response variable.}

\item{FT}{Covariate matrix for observed locations.}

\item{MatFFT}{Covariate matrix for all time-space points.}

\item{GT}{Evolution matrix.}

\item{sites}{Matrix of observed locations coordinates.}

\item{INDI}{Indices of the grid points for interpolation.}

\item{GAMA}{Matrix defining subsets of locations for interpolation.}

\item{FTNO}{Covariate matrix for non-observed locations.}

\item{RS}{Matrix representing the map area for spatial interpolation.}
}
\value{
A matrix \code{MatvecNO} containing interpolated values for non-observed locations for each time step.
}
\description{
This function performs spatio-temporal interpolation for a response variable based on the output
of the SpatialDeformationMCMC model.
}
\examples{
library(graphics)
library(animation)
library(MASS)
library(Stdyndef)

data(temperature)
data(FT)
data(MatFFT)
data(GT)
data(sites)
data(GAMA)
data(Map)
data(FTNO)

Mod=SpatialDeformationMCMC(response=temperature,FT=FT,MatFFT=MatFFT,GT=GT,sites=sites,GAMA=GAMA,iteration=100,burnin=50,jump=1)

INDI=c(4,15,16,26:28,36:39,46:66,69:77,80:88,92:99,105:108,119)

Fig=(spatio_temporal_interpolation(Mod,temperature, FT, MatFFT, GT, sites, INDI, GAMA, FTNO, Map))


vecyest=apply(Fig,2,mean)
vecyp025=apply(Fig,2,quantile,prob=c(0.025))
vecyp0975=apply(Fig,2,quantile,prob=c(0.975))


yest=t(matrix(vecyest,length(INDI),nrow(temperature)))
YEAR=c("2007/Jan./Summer","2007/Feb./Summer","2007/Mar./Summer","2007/Apr./Autumn","2007/May/Autumn","2007/June/Autumn","2007/July/Winter","2007/Aug./Winter","2007/Sept./Winter","2007/Oct./Spring","2007/Nov./Spring","2007/Dec./Spring","2008/Jan./Summer","2008/Feb./Summer","2008/Mar./Summer","2008/Apr./Autumn","2008/May/Autumn","2008/June/Autumn","2008/July/Winter","2008/Aug./Winter","2008/Sept./Winter","2008/Oct./Spring","2008/Nov./Spring","2008/Dec./Spring",
      "2009/Jan./Summer","2009/Feb./Summer","2009/Mar./Summer","2009/Apr./Autumn","2009/May/Autumn","2009/June/Autumn","2009/July/Winter","2009/Aug./Winter","2009/Sept./Winter","2009/Oct./Spring","2009/Nov./Spring","2009/Dec./Spring",
      "2010/Jan./Summer","2010/Feb./Summer","2010/Mar./Summer","2010/Apr./Autumn","2010/May/Autumn","2010/June/Autumn","2010/July/Winter","2010/Aug./Winter","2010/Sept./Winter","2010/Oct./Spring","2010/Nov./Spring","2010/Dec./Spring",
      "2011/Jan./Summer","2011/Feb./Summer","2011/Mar./Summer","2011/Apr./Autumn","2011/May/Autumn","2011/June/Autumn","2011/July/Winter","2011/Aug./Winter","2011/Sept./Winter","2011/Oct./Spring","2011/Nov./Spring","2011/Dec./Spring",
      "2012/Jan./Summer","2012/Feb./Summer","2012/Mar./Summer","2012/Apr./Autumn","2012/May/Autumn","2012/June/Autumn","2012/July/Winter","2012/Aug./Winter","2012/Sept./Winter","2012/Oct./Spring","2012/Nov./Spring","2012/Dec./Spring",
      "2013/Jan./Summer","2013/Feb./Summer","2013/Mar./Summer","2013/Apr./Autumn","2013/May/Autumn","2013/June/Autumn","2013/July/Winter","2013/Aug./Winter","2013/Sept./Winter","2013/Oct./Spring","2013/Nov./Spring","2013/Dec./Spring",
      "2014/Jan./Summer","2014/Feb./Summer","2014/Mar./Summer","2014/Apr./Autumn","2014/May/Autumn","2014/June/Autumn","2014/July/Winter","2014/Aug./Winter","2014/Sept./Winter","2014/Oct./Spring","2014/Nov./Spring","2014/Dec./Spring",
      "2015/Jan./Summer","2015/Feb./Summer","2015/Mar./Summer","2015/Apr./Autumn","2015/May/Autumn","2015/June/Autumn","2015/July/Winter","2015/Aug./Winter","2015/Sept./Winter","2015/Oct./Spring","2015/Nov./Spring","2015/Dec./Spring",
      "2016/Jan./Summer","2016/Feb./Summer","2016/Mar./Summer","2016/Apr./Autumn","2016/May/Autumn","2016/June/Autumn","2016/July/Winter","2016/Aug./Winter","2016/Sept./Winter","2016/Oct./Spring","2016/Nov./Spring","2016/Dec./Spring",
      "2017/Jan./Summer","2017/Feb./Summer","2017/Mar./Summer","2017/Apr./Autumn","2017/May/Autumn","2017/June/Autumn","2017/July/Winter","2017/Aug./Winter","2017/Sept./Winter","2017/Oct./Spring","2017/Nov./Spring","2017/Dec./Spring",
      "2018/Jan./Summer","2018/Feb./Summer","2018/Mar./Summer","2018/Apr./Autumn","2018/May/Autumn","2018/June/Autumn","2018/July/Winter","2018/Aug./Winter","2018/Sept./Winter","2018/Oct./Spring","2018/Nov./Spring","2018/Dec./Spring",
      "2019/Jan./Summer","2019/Feb./Summer","2019/Mar./Summer","2019/Apr./Autumn","2019/May/Autumn","2019/June/Autumn","2019/July/Winter","2019/Aug./Winter","2019/Sept./Winter","2019/Oct./Spring","2019/Nov./Spring","2019/Dec./Spring",
      "2020/Jan./Summer","2020/Feb./Summer","2020/Mar./Summer","2020/Apr./Autumn","2020/May/Autumn","2020/June/Autumn","2020/July/Winter","2020/Aug./Winter","2020/Sept./Winter","2020/Oct./Spring","2020/Nov./Spring","2020/Dec./Spring",
      "2021/Jan./Summer","2021/Feb./Summer","2021/Mar./Summer","2021/Apr./Autumn","2021/May/Autumn","2021/June/Autumn","2021/July/Winter","2021/Aug./Winter","2021/Sept./Winter","2021/Oct./Spring","2021/Nov./Spring","2021/Dec./Spring")
infz=min(yest)#8.38#min(yest)
maxz=max(yest)#29.07#max(yest)

dd=11
minx=min(Map[,1])
maxx=max(Map[,1])
miny=min(Map[,2])
maxy=max(Map[,2])

se1=seq((minx+(maxx-minx)/(2*dd)),(maxx-(maxx-minx)/(dd*2)),(maxx-minx)/dd)
se2=seq((miny+(maxy-miny)/(2*dd)),(maxy-(maxy-miny)/(dd*2)),(maxy-miny)/dd)


graf=function(){

for(rr in 1:nrow(yest)){
   vectMATRIZ=rep(maxz,dd*dd)
   vectMATRIZ[INDI]=yest[rr,]
   MATRIZ=matrix(vectMATRIZ,dd,dd)
   filled.contour(se1,se2,t(MATRIZ),nlevels=13,color = terrain.colors,zlim=c(infz,maxz),plot.axes = {
     lines(Map)},plot.title = title(main = paste(c('Year/Month/Season = ',YEAR[rr]),collapse=''),xlab = "Longitude", ylab = "Latitude"))

 }

}

saveGIF(graf(),interval=0.5,movie.name="ModelA.gif")
}
